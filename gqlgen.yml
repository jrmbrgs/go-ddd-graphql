schema:
  - library/graph/schemas/*.graphql
exec:
  filename: library/graph/generated/generated.go
  package: generated

# Uncomment to enable federation
# federation:
#   filename: graph/generated/federation.go
#   package: generated

model:
  filename: library/models/models.go
  package: models

resolver:
  layout: follow-schema
  dir: library/graph/resolvers
  package: resolvers

# Optional: turn on use `gqlgen:"fieldName"` tags in your models
# struct_tag: json

# Optional: turn on to use []Thing instead of []*Thing
# omit_slice_element_pointers: false

# Optional: set to speed up generation time by not performing a final validation pass.
# skip_validation: true

autobind:
  - "github.com/jrmbrgs/goodkarma-api/library/models"

# This section declares type mapping between the GraphQL and go type systems
#
# The first line in each type will be used as defaults for resolver arguments and
# modelgen, the others will be allowed when binding to fields. Configure them to
# your liking
models:
  ID:
    model:
      - github.com/99designs/gqlgen/graphql.ID
      - github.com/99designs/gqlgen/graphql.Int
      - github.com/99designs/gqlgen/graphql.Int64
      - github.com/99designs/gqlgen/graphql.Int32
  Int:
    model:
      - github.com/99designs/gqlgen/graphql.Int
      - github.com/99designs/gqlgen/graphql.Int64
      - github.com/99designs/gqlgen/graphql.Int32
  CharityOrganization :
    model: github.com/jrmbrgs/goodkarma-api/library/models.CharityOrganization 
#  OffenseCategory:
#    model: github.com/jrmbrgs/goodkarma-api/library/models.OffenseCategory
